#!/usr/bin/env groovy

node {

    try{
        stage('checkout') {
        checkout scm
        }

        stage('check java') {
            sh "java -version"
            echo "version"
            echo "${env.BRANCH_NAME}""
        }

    } catch (final e){
        currentBuild.result = 'FAILURE'
        throw e
    } finally {
    def branchesToNotify = ["master"]
        if (branchesToNotify.any{env.BRANCH_NAME == it}) {
            notifyChannel()
            echo "notification is sent"
        }else{
             echo "not master branch"
        }
        echo "finished"
    }

}

def notifyChannel() {
    try {
        // Slack channel #acms-parser
        def icon = ':white_check_mark:'
        if (currentBuild.result == 'FAILURE') {
            icon = ':x:'
         }
        def committerEmail = sh(
            script: 'git --no-pager show -s --format=\'%ae\'',
            returnStdout: true).trim()
        def blamed = committerEmail
        def slackURL = "https://hooks.slack.com/services/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"
        def BUILD_URL = "serdar.com"
        def json = "{\"blocks\": [{\"type\": \"section\", \"text\": {\"type\": \"mrkdwn\", \"text\": \"${icon} Job Url: ${env.JOB_URL}${BUILD_NUMBER} ${currentBuild.result}  - Committer: ${blamed}\"}}, {\"type\": \"context\", \"elements\": [{\"type\": \"mrkdwn\", \"text\": \"Build URL: ${BUILD_URL} \"}]}]}"

        sh "curl -s -X POST -H 'Content-type: application/json' --data '${json}' ${slackURL}"

    } catch (error) {
        echo error
    }
}
